%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.63.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Mac OS X)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 460 380
%%HiResBoundingBox: 0 0 460 380
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font DCKSJV+Times-Roman
%!FontType1-1.0: DCKSJV+Times-Roman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /DCKSJV+Times-Roman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -14 476 688] readonly def
/StrokeWidth 0 def
/UniqueID 5020931 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
CE16D9AA77431038EA7920FFEBF54E6143E306DC7F199A9AE76599F0F0C97BB1
E6D10C6B128F198FF07BD074305000151BA359478A2E632CD679450B539DC1EC
D5F0409998F8AF3ABBE8523B40BE9B5F150D5D125D65C551E82B612F51F92788
8EACECF38BF0E18883A2E6628FB5FDC17EBA1B912F8C38B6D0EF9922DF13691D
362305743C8FEB7D2F97CB5E1256A5968DDF4583FFB1597D1FB1C840F003A337
0ED1ED40DF25C27A1A81AAE099C4206DD3343512ADE8EE69542F5974D9895746
6BB948494E80051CB23A5A688A8095B57E32A6DE8598FD86FD732357785BA240
8ABAB9D1621268A9F6B9F07E1E473A9FFF8114DD621FD1E30EE3A06A680CBA01
5383BAF91193062138F4DFF22C2EAE14F436502E4315C050226CE4DAD4C0C45F
68B4AB90A5EE8C38068A02EC56C8090FC5965AAA858379EC2F9D18A81CF37752
34A8B935BE8F734EA897ED641081F411C6E3FE7922F3FD16B9A861BADEE2A58D
CF58B344ECF9200BB9F1A517A221F69B2D7E669C10AC32ABFA4C313D1BBCF0BC
5A22C37C46F91B8AE924C4AB5B99F11EE3EB60AC2758A8E98A2B8410AEC095B6
2F33238B3960C77D734EC64473C7ABFB16038C571A2EE5852B3ACC388E0D376E
DCD8E0353D07D9C7A87FC04F95F89F1EB617429056DF03E73785EDBA119A3AD0
A8FCDDFD87BC4B4937597B16919898C491BE90EA640CEAA5C7AABAF3960AA2FB
B4809D97B4B8987320A44FBA7982705BFFBC0EC471D796F749CF82A668544BE6
ED81A3921D86DD4946135C2E43472B0C65B7A044A59DB9D461002F27834DF2C8
5B780716AFBBB111D242CE7147853C0C9D3655E18DEA2263E01F586EFA30E077
74B7D0CC488632E81A84C426734D114E6497D91CABFBEF919829C7322FB0BF45
7ACC8983BE26F76B4F376AE7F3F678895A84E46E6726637E219A8CB08CDF0565
83844EBDCD8D3AB11E6146AA3EA9660E7A0D44E085C44F2E6B73729FE94BE5B7
F6778AB6ADF72BF6A7E9D0255FDE56982E3BA005B66B2D565590568B5E8BA9C7
C9F46A5EE0B326B0060B1FAFD7F238C9CA6F36AC277972F1BF29DE409ED62AAD
938BAA6F8F173FA46CECA6E83F9D3D69047F93D85645E565FB2E5DFF94979CBC
8945FF45A9B2FCA13CE88C691E9CF5EBDC15B041429079D839999F62C89A884E
8B84792EBEDF2E5C2DFA7A2BF1FA13593AD1CDF3BFC993BBF26A18B27699894B
F5381EEB938B6DF6BF1A2EF39B954C025C8ED9841999A75E9BB7D5B616734A18
B6AAF75F47D2BE7B1425A4C89ADFC7FF837E6318B885E76CA8F34E51EFE772CC
E75911E036FABF7776D0635B9F9727BC75237FA167B9036AF0D901C73A264497
96616B9AF418C2CB3E4DCDFA24C965C20569BDA3800014E8816AC29D11A01CB0
749D4CBDB3E654F954F5F27FE5F762C017E4360C636DF2CBEEABE631C0E66FA2
6AB13BE2FEA0B250E4F761A80D9BD0ADDF39EBA9179DD5E3864B3A780025FBC9
60198BED27E368C1FB68860C320CCA0FA41EE92B73A641C39DF7330A98FEA9CA
DDCE0599B60F9AAA127930503A24CF41EED24734B8B95DAB5E7E800EB39325E1
36345D98B5E57ACDD8AA6F26878F478CBFE3C8619D59665716EF9AAE932E7F41
70299ADA0708A08A61A0DD1AE3600512CFB4FA4779586CD56A17FC61CFB6C0D7
A24D7C819E12378771279CCDF7C6C2EBE58EB617C4AEDE9AA31B1C1846D1C045
D0B0956CD80EE97380AD314F4FFE83C290D0D1D7F9AE094F46BFF542B6D05756
1655B150317AAE5EC13434B3727B212C6DAB44BC68D867D3C6F83F7BAD7A95BE
07DA3372DAB87E8C74DCE84566C62658B78096E8E27E0F8757331285F26D7B15
B4F777A5609D03FBEE36B78A8E82C757C082DBC442F93D5B4CEF41467E5E6354
E1A48E7FC4C8A8A3B66153AB838DC76A05026EC01AC9F3A531E2D7CA4266FD28
5FE6F98DA779F540F2D7FEE4205ACBA6DA94E677D30E7803209C206FC1935896
5B36AE9DAF09E4D1F7DC866ED5B57F7E354217815D58DA3E9D9DF014DE06D436
D6E8C9A4C8E6EC618C733DB21DB395E0399A6A2594812356BBCB0F2D41C67025
C365F6423DDDE170783196A85D9CB8134D4C53BEEBDD0F58A7BC9DF4DB120225
D0E10482F2C521B7FED4C7C04EB0835F9F43417903C8A6A087527A0CBB15BFF8
5601E00F7FB6C17E9B372D4CD353C31E6A661D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /DCKSJV+Times-Roman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 460 380 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-410 -150 5480 4200 re
f
-410 -150 5480 4200 re
f
300 310 4250 3425 re
f
5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
300 310 m
4550 310 l
S
300 310 m
300 352.5 l
S
725 310 m
725 352.5 l
S
1150 310 m
1150 352.5 l
S
1575 310 m
1575 352.5 l
S
2000 310 m
2000 352.5 l
S
2425 310 m
2425 352.5 l
S
2850 310 m
2850 352.5 l
S
3275 310 m
3275 352.5 l
S
3700 310 m
3700 352.5 l
S
4125 310 m
4125 352.5 l
S
4550 310 m
4550 352.5 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 27.5 18] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5
0] Tj
-3350 TJm
(0.1)
[5
0
2.5
0
5
0] Tj
-3000 TJm
(0.2)
[5
0
2.5
0
5
0] Tj
-3000 TJm
(0.3)
[5
0
2.5
0
5
0] Tj
-3000 TJm
(0.4)
[5
0
2.5
0
5
0] Tj
-3000 TJm
(0.5)
[5
0
2.5
0
5
0] Tj
-3000 TJm
(0.6)
[5
0
2.5
0
5
0] Tj
-3000 TJm
(0.7)
[5
0
2.5
0
5
0] Tj
-3000 TJm
(0.8)
[5
0
2.5
0
5
0] Tj
-3000 TJm
(0.9)
[5
0
2.5
0
5
0] Tj
-3400 TJm
(1)
[5
0] Tj
Q
2380.16 55.7305 m
2381.41 54.7891 2383.23 54.3203 2385.63 54.3203 c
2387.93 54.3203 2389.96 55.4141 2391.72 57.6016 c
2393.5 59.7852 2394.7 62.1836 2395.32 64.7891 c
2400.32 84.3203 l
2401.05 87.8594 2401.41 90.2578 2401.41 91.5117 c
2401.41 93.3828 2400.92 94.9961 2399.93 96.3516 c
2398.94 97.7031 2397.5 98.3789 2395.63 98.3789 c
2393.34 98.3789 2391.18 97.6484 2389.14 96.1914 c
2387.12 94.7383 2385.4 92.8906 2383.99 90.6484 c
2382.59 88.4102 2381.62 86.1445 2381.1 83.8516 c
2380.89 83.4375 2380.57 83.2305 2380.16 83.2305 c
2378.75 83.2305 l
2378.23 83.2305 2377.97 83.5391 2377.97 84.1602 c
2377.97 84.4805 l
2378.71 87.1875 2379.93 89.8398 2381.64 92.4414 c
2383.36 95.0469 2385.47 97.1563 2387.97 98.7695 c
2390.47 100.383 2393.13 101.191 2395.94 101.191 c
2398.65 101.191 2401.07 100.488 2403.21 99.0781 c
2405.34 97.6797 2406.88 95.7305 2407.82 93.2305 c
2409.07 95.5156 2410.66 97.418 2412.58 98.9297 c
2414.51 100.438 2416.67 101.191 2419.07 101.191 c
2420.63 101.191 2422.22 100.902 2423.83 100.328 c
2425.45 99.7617 2426.78 98.9063 2427.82 97.7617 c
2428.86 96.6133 2429.38 95.207 2429.38 93.5391 c
2429.38 91.668 2428.78 90.0508 2427.58 88.6914 c
2426.38 87.3359 2424.84 86.6602 2422.97 86.6602 c
2421.82 86.6602 2420.86 87.0508 2420.08 87.8281 c
2419.3 88.6172 2418.91 89.582 2418.91 90.7305 c
2418.91 92.2891 2419.43 93.6445 2420.47 94.7891 c
2421.51 95.9375 2422.76 96.6133 2424.22 96.8203 c
2422.98 97.8594 2421.15 98.3789 2418.75 98.3789 c
2416.36 98.3789 2414.3 97.2852 2412.58 95.1016 c
2410.86 92.9141 2409.64 90.4648 2408.91 87.7617 c
2404.07 68.3789 l
2403.34 65.4648 2402.97 63.0195 2402.97 61.0391 c
2402.97 59.168 2403.49 57.5781 2404.53 56.2695 c
2405.58 54.9688 2406.98 54.3203 2408.75 54.3203 c
2412.19 54.3203 2415.27 55.8281 2417.97 58.8516 c
2420.68 61.8711 2422.45 65.1484 2423.28 68.6914 c
2423.39 69.2148 2423.7 69.4805 2424.22 69.4805 c
2425.47 69.4805 l
2425.79 69.4805 2426.02 69.375 2426.18 69.1602 c
2426.34 68.9531 2426.41 68.6914 2426.41 68.3789 c
2426.41 68.3789 2426.41 68.2773 2426.41 68.0703 c
2425.37 63.6953 2423.19 59.8164 2419.85 56.4297 c
2416.52 53.043 2412.77 51.3516 2408.6 51.3516 c
2405.89 51.3516 2403.44 52.0781 2401.25 53.5391 c
2399.07 55 2397.55 56.9805 2396.72 59.4805 c
2395.57 57.2852 2393.99 55.3828 2391.96 53.7695 c
2389.93 52.1563 2387.77 51.3516 2385.47 51.3516 c
2383.91 51.3516 2382.3 51.6367 2380.63 52.2109 c
2378.96 52.7852 2377.61 53.6445 2376.57 54.7891 c
2375.53 55.9375 2375 57.3945 2375 59.1602 c
2375 60.8281 2375.6 62.3633 2376.8 63.7695 c
2378 65.1758 2379.48 65.8789 2381.25 65.8789 c
2382.5 65.8789 2383.52 65.5156 2384.3 64.7891 c
2385.08 64.0586 2385.47 63.1211 2385.47 61.9805 c
2385.47 60.4141 2384.98 59.0586 2383.99 57.9102 c
2383 56.7617 2381.72 56.0352 2380.16 55.7305 c
f
2441.93 36.1016 m
2441.93 38.9102 l
2448.6 38.9102 2451.93 39.7422 2451.93 41.4102 c
2451.93 83.4414 l
2449.13 82.0859 2445.64 81.4102 2441.47 81.4102 c
2441.47 84.2305 l
2447.93 84.2305 2452.82 85.9453 2456.15 89.3789 c
2457.4 89.3789 l
2457.51 89.3789 2457.66 89.3047 2457.87 89.1484 c
2458.08 88.9883 2458.18 88.8594 2458.18 88.7617 c
2458.18 41.4102 l
2458.18 39.7422 2461.52 38.9102 2468.18 38.9102 c
2468.18 36.1016 l
2441.93 36.1016 l
f
300 310 m
300 3735 l
S
300 310 m
342.5 310 l
S
300 652.5 m
342.5 652.5 l
S
300 995 m
342.5 995 l
S
300 1337.5 m
342.5 1337.5 l
S
300 1680 m
342.5 1680 l
S
300 2022.5 m
342.5 2022.5 l
S
300 2365 m
342.5 2365 l
S
300 2707.5 m
342.5 2707.5 l
S
300 3050 m
342.5 3050 l
S
300 3392.5 m
342.5 3392.5 l
S
300 3735 m
342.5 3735 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 21 28] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5
0] Tj
-8 34.25 Td
(0.1)
[5
0
2.5
0
5
0] Tj
-8 68.5 Td
(0.2)
[5
0
2.5
0
5
0] Tj
-8 102.75 Td
(0.3)
[5
0
2.5
0
5
0] Tj
-8 137 Td
(0.4)
[5
0
2.5
0
5
0] Tj
-8 171.25 Td
(0.5)
[5
0
2.5
0
5
0] Tj
-8 205.5 Td
(0.6)
[5
0
2.5
0
5
0] Tj
-8 239.75 Td
(0.7)
[5
0
2.5
0
5
0] Tj
-8 274 Td
(0.8)
[5
0
2.5
0
5
0] Tj
-8 308.25 Td
(0.9)
[5
0
2.5
0
5
0] Tj
0 342.5 Td
(1)
[5
0] Tj
Q
62.2695 1977.66 m
63.2109 1978.91 63.6797 1980.73 63.6797 1983.13 c
63.6797 1985.43 62.5859 1987.45 60.3984 1989.22 c
58.2148 1991 55.8164 1992.2 53.2109 1992.82 c
33.6797 1997.82 l
30.1406 1998.55 27.7422 1998.91 26.4883 1998.91 c
24.6172 1998.91 23.0039 1998.42 21.6484 1997.43 c
20.2969 1996.44 19.6211 1995 19.6211 1993.13 c
19.6211 1990.84 20.3516 1988.68 21.8086 1986.64 c
23.2617 1984.61 25.1094 1982.9 27.3516 1981.49 c
29.5898 1980.09 31.8555 1979.12 34.1484 1978.6 c
34.5625 1978.39 34.7695 1978.07 34.7695 1977.66 c
34.7695 1976.25 l
34.7695 1975.73 34.4609 1975.47 33.8398 1975.47 c
33.5195 1975.47 l
30.8125 1976.2 28.1602 1977.43 25.5586 1979.14 c
22.9531 1980.86 20.8438 1982.97 19.2305 1985.47 c
17.6172 1987.97 16.8086 1990.63 16.8086 1993.44 c
16.8086 1996.15 17.5117 1998.57 18.9219 2000.71 c
20.3203 2002.84 22.2695 2004.38 24.7695 2005.32 c
22.4844 2006.57 20.582 2008.16 19.0703 2010.08 c
17.5625 2012.01 16.8086 2014.17 16.8086 2016.57 c
16.8086 2018.13 17.0977 2019.72 17.6719 2021.33 c
18.2383 2022.95 19.0938 2024.27 20.2383 2025.32 c
21.3867 2026.36 22.793 2026.88 24.4609 2026.88 c
26.332 2026.88 27.9492 2026.28 29.3086 2025.08 c
30.6641 2023.88 31.3398 2022.34 31.3398 2020.47 c
31.3398 2019.32 30.9492 2018.36 30.1719 2017.58 c
29.3828 2016.8 28.418 2016.41 27.2695 2016.41 c
25.7109 2016.41 24.3555 2016.93 23.2109 2017.97 c
22.0625 2019.01 21.3867 2020.26 21.1797 2021.72 c
20.1406 2020.48 19.6211 2018.65 19.6211 2016.25 c
19.6211 2013.86 20.7148 2011.8 22.8984 2010.08 c
25.0859 2008.36 27.5352 2007.14 30.2383 2006.41 c
49.6211 2001.57 l
52.5352 2000.84 54.9805 2000.47 56.9609 2000.47 c
58.832 2000.47 60.4219 2000.99 61.7305 2002.03 c
63.0313 2003.08 63.6797 2004.48 63.6797 2006.25 c
63.6797 2009.69 62.1719 2012.77 59.1484 2015.47 c
56.1289 2018.18 52.8516 2019.95 49.3086 2020.78 c
48.7852 2020.89 48.5195 2021.2 48.5195 2021.72 c
48.5195 2022.97 l
48.5195 2023.29 48.625 2023.52 48.8398 2023.68 c
49.0469 2023.84 49.3086 2023.91 49.6211 2023.91 c
49.6211 2023.91 49.7227 2023.91 49.9297 2023.91 c
54.3047 2022.87 58.1836 2020.68 61.5703 2017.35 c
64.957 2014.02 66.6484 2010.27 66.6484 2006.1 c
66.6484 2003.39 65.9219 2000.94 64.4609 1998.75 c
63 1996.57 61.0195 1995.05 58.5195 1994.22 c
60.7148 1993.07 62.6172 1991.49 64.2305 1989.46 c
65.8438 1987.43 66.6484 1985.27 66.6484 1982.97 c
66.6484 1981.41 66.3633 1979.8 65.7891 1978.13 c
65.2148 1976.46 64.3555 1975.11 63.2109 1974.07 c
62.0625 1973.02 60.6055 1972.5 58.8398 1972.5 c
57.1719 1972.5 55.6367 1973.1 54.2305 1974.3 c
52.8242 1975.5 52.1211 1976.98 52.1211 1978.75 c
52.1211 1980 52.4844 1981.02 53.2109 1981.8 c
53.9414 1982.58 54.8789 1982.97 56.0195 1982.97 c
57.5859 1982.97 58.9414 1982.48 60.0898 1981.49 c
61.2383 1980.5 61.9648 1979.22 62.2695 1977.66 c
f
81.8984 2036 m
79.7109 2036 l
79.6094 2036 79.4531 2036.05 79.2383 2036.15 c
65.4883 2048.5 l
63.5117 2050.38 61.8203 2051.91 60.4219 2053.11 c
59.0117 2054.3 57.4219 2055.48 55.6484 2056.62 c
53.875 2057.77 52.0547 2058.66 50.1797 2059.28 c
48.3086 2059.91 46.3281 2060.22 44.2383 2060.22 c
42.0547 2060.22 39.9688 2059.83 37.9883 2059.04 c
36.0117 2058.26 34.4219 2057.07 33.2305 2055.45 c
32.0313 2053.84 31.4297 2051.89 31.4297 2049.59 c
31.4297 2047.3 32.1328 2045.24 33.5391 2043.42 c
34.9453 2041.59 36.7422 2040.27 38.9297 2039.43 c
38.8242 2039.64 38.7695 2039.96 38.7695 2040.37 c
38.7695 2041.52 39.1875 2042.54 40.0195 2043.42 c
40.8516 2044.31 41.8984 2044.75 43.1484 2044.75 c
44.3984 2044.75 45.4375 2044.31 46.2695 2043.42 c
47.1016 2042.54 47.5195 2041.52 47.5195 2040.37 c
47.5195 2039.13 47.0781 2038.09 46.1992 2037.25 c
45.3125 2036.42 44.2969 2036 43.1484 2036 c
41.1719 2036 39.293 2036.36 37.5195 2037.09 c
35.7539 2037.82 34.1914 2038.89 32.8398 2040.29 c
31.4883 2041.7 30.4414 2043.32 29.7109 2045.14 c
28.9844 2046.96 28.6211 2048.86 28.6211 2050.84 c
28.6211 2053.86 29.2695 2056.7 30.5703 2059.36 c
31.8711 2062.02 33.6914 2064.1 36.0391 2065.61 c
38.3867 2067.12 41.1211 2067.87 44.2383 2067.87 c
46.5352 2067.87 48.7227 2067.38 50.8086 2066.39 c
52.8906 2065.4 54.7891 2064.09 56.5117 2062.48 c
58.2305 2060.87 60.1836 2058.84 62.3711 2056.39 c
64.5586 2053.95 66.0117 2052.3 66.7383 2051.47 c
75.3398 2042.4 l
75.3398 2050.06 l
75.3398 2053.91 75.3125 2057.09 75.2617 2059.59 c
75.207 2062.09 75.125 2063.45 75.0195 2063.65 c
74.293 2064.28 71.8477 2064.91 67.6797 2065.53 c
67.6797 2067.87 l
81.8984 2065.68 l
81.8984 2036 l
f
20 w
0 J
/DeviceRGB {} CS
[1 0 0] SC
2936.6 2365 m
2936.6 2412.83 2897.83 2451.6 2850 2451.6 c
2802.17 2451.6 2763.4 2412.83 2763.4 2365 c
2763.4 2317.17 2802.17 2278.4 2850 2278.4 c
2897.83 2278.4 2936.6 2317.17 2936.6 2365 c
h
S
3149.1 1851.25 m
3149.1 1899.08 3110.33 1937.85 3062.5 1937.85 c
3014.67 1937.85 2975.9 1899.08 2975.9 1851.25 c
2975.9 1803.42 3014.67 1764.65 3062.5 1764.65 c
3110.33 1764.65 3149.1 1803.42 3149.1 1851.25 c
h
S
3786.6 2022.5 m
3786.6 2070.33 3747.83 2109.1 3700 2109.1 c
3652.17 2109.1 3613.4 2070.33 3613.4 2022.5 c
3613.4 1974.67 3652.17 1935.9 3700 1935.9 c
3747.83 1935.9 3786.6 1974.67 3786.6 2022.5 c
h
S
/DeviceRGB {} CS
[0 1 0] SC
725 3140 m
725 2960 l
635 3050 m
815 3050 l
S
1575 2797.5 m
1575 2617.5 l
1485 2707.5 m
1665 2707.5 l
S
10 w
/DeviceRGB {} CS
[1 0 0] SC
1185.36 995 m
1185.36 1014.53 1169.53 1030.36 1150 1030.36 c
1130.47 1030.36 1114.64 1014.53 1114.64 995 c
1114.64 975.469 1130.47 959.641 1150 959.641 c
1169.53 959.641 1185.36 975.469 1185.36 995 c
h
S
547.859 1166.25 m
547.859 1185.78 532.031 1201.61 512.5 1201.61 c
492.969 1201.61 477.141 1185.78 477.141 1166.25 c
477.141 1146.72 492.969 1130.89 512.5 1130.89 c
532.031 1130.89 547.859 1146.72 547.859 1166.25 c
h
S
1822.86 1337.5 m
1822.86 1357.03 1807.03 1372.86 1787.5 1372.86 c
1767.97 1372.86 1752.14 1357.03 1752.14 1337.5 c
1752.14 1317.97 1767.97 1302.14 1787.5 1302.14 c
1807.03 1302.14 1822.86 1317.97 1822.86 1337.5 c
h
S
/DeviceRGB {} CS
[0 1 0] SC
2850 2918.75 m
2850 2838.75 l
2810 2878.75 m
2890 2878.75 l
S
3700 3432.5 m
3700 3352.5 l
3660 3392.5 m
3740 3392.5 l
S
4125 3090 m
4125 3010 l
4085 3050 m
4165 3050 l
S
2000 1548.75 m
2000 1468.75 l
1960 1508.75 m
2040 1508.75 l
S
2212.5 2405 m
2212.5 2325 l
2172.5 2365 m
2252.5 2365 l
S
2425 692.5 m
2425 612.5 l
2385 652.5 m
2465 652.5 l
S
2850 1035 m
2850 955 l
2810 995 m
2890 995 l
S
3700 1035 m
3700 955 l
3660 995 m
3740 995 l
S
4337.5 692.5 m
4337.5 612.5 l
4297.5 652.5 m
4377.5 652.5 l
S
20 w
/DeviceGray {} CS
[0] SC
1930 1438.75 140 140 re
S
2142.5 2295 140 140 re
S
2355 582.5 140 140 re
S
2780 925 140 140 re
S
3630 925 140 140 re
S
4267.5 582.5 140 140 re
S
[80 80] 0 d
2 j
300 2536.25 m
4550 2536.25 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font DCKSJV+Times-Roman
%%EOF
